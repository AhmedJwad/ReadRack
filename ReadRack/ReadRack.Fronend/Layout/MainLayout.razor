@inherits LayoutComponentBase
<div class="bb-page">

    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <AuthLinks />
            <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
        </div>

        <article class="content px-4">
            <div class="py-2">@Body</div>
        </article>
    </main>

</div>

@code {
    Sidebar sidebar;
    List<NavItem> navItems;
   
    [CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; } = null!;

    private async Task<SidebarDataProviderResult> SidebarDataProvider(SidebarDataProviderRequest request)
    {
        if (navItems is null)
            navItems =await GetNavItems();

        return await Task.FromResult(request.ApplyTo(navItems));
    }

    private async Task<List<NavItem>> GetNavItems()
    {

        navItems = new List<NavItem>
        {
            new NavItem { Id = "1", Href = "/", IconName = IconName.HouseDoorFill, Text = "Home", Match=NavLinkMatch.All},
            new NavItem { Id = "2", Href = "/counter", IconName = IconName.PlusSquareFill, Text = "Counter"},

            //new NavItem { Id = "3", Href = "/colleges", IconName = IconName.List, Text = "Colleges"},

        };
        var isAdmin =await CheckIsAuthenticatedAsync("Admin");
        if(isAdmin)
        {
            navItems.Add(new NavItem { Id = "3", Href = "/colleges", IconName = IconName.List, Text = "Colleges" });
        }
        return navItems;
    }
    private async Task<bool> CheckIsAuthenticatedAsync(string role)
    {
        var authenticationState = await authenticationStateTask;
       return  authenticationState.User.Identity!.IsAuthenticated && authenticationState.User.IsInRole(role);
    }
}